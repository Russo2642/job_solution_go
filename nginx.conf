server {
    listen 80;
    listen [::]:80;
    server_name 77.240.38.137;
    
    location / {
        proxy_pass http://frontend:80;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        try_files $uri $uri/ /index.html;
    }
    
    location /api/ {
        proxy_pass http://app:8080/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Для Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

# Закомментированная SSL-конфигурация (будет активирована после получения сертификатов)
# server {
#     listen 443 ssl;
#     listen [::]:443 ssl;
#     server_name 77.240.38.137;
#     
#     # SSL сертификаты
#     ssl_certificate /etc/letsencrypt/live/77.240.38.137/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/77.240.38.137/privkey.pem;
#     
#     # Оптимизация SSL
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 1d;
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     
#     # Корневая директория для фронтенда
#     root /usr/share/nginx/html;
#     index index.html;
# 
#     # Сжатие ответов
#     gzip on;
#     gzip_comp_level 5;
#     gzip_min_length 256;
#     gzip_proxied any;
#     gzip_vary on;
#     gzip_types
#         application/javascript
#         application/json
#         application/xml
#         application/xml+rss
#         image/svg+xml
#         text/css
#         text/javascript
#         text/plain
#         text/xml;
#     
#     # Проксирование запросов к API на бэкенд
#     location /api/ {
#         proxy_pass http://app:8080/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#     }
#     
#     # Обработка статических файлов фронтенда
#     location / {
#         proxy_pass http://frontend:80;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#     }
#     
#     # Кэширование статических файлов
#     location ~* \.(?:ico|css|js|gif|jpe?g|png|svg|woff|woff2|ttf|eot)$ {
#         proxy_pass http://frontend:80;
#         expires 30d;
#         add_header Cache-Control "public, max-age=2592000";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#     }
# 
#     # Отключение кэширования для HTML файлов
#     location ~* \.html$ {
#         proxy_pass http://frontend:80;
#         expires -1;
#         add_header Cache-Control "no-store, no-cache, must-revalidate";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#     }
# } 